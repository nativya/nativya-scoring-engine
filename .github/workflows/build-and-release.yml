name: Build and Release

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  contents: write
  packages: write

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ github.repository }}/my-proof:${{ github.run_number }}
            ghcr.io/${{ github.repository }}/my-proof:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Generate release body
        run: |
          echo "Docker image available at: ghcr.io/${{ github.repository }}/my-proof:${{ github.run_number }}" > release_body.txt

      - name: Save Docker image as tar.gz
        run: |
          docker save ghcr.io/${{ github.repository }}/my-proof:${{ github.run_number }} | gzip > my-proof-${{ github.run_number }}.tar.gz

      - name: Check tarball size
        id: tarball_size
        run: |
          FILESIZE=$(stat -c%s "my-proof-${{ github.run_number }}.tar.gz")
          echo "Tarball size: $FILESIZE bytes"
          if [ $FILESIZE -ge 2147483648 ]; then
            echo "::error::Tarball exceeds 2GB GitHub Release limit. Skipping upload."
            echo "upload_tarball=false" >> $GITHUB_OUTPUT
          else
            echo "upload_tarball=true" >> $GITHUB_OUTPUT
          fi

      - name: Upload tarball to Release
        if: steps.tarball_size.outputs.upload_tarball == 'true' && github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.run_number }}
          name: Release v${{ github.run_number }}
          body_path: release_body.txt
          draft: false
          prerelease: false
          files: |
            my-proof-${{ github.run_number }}.tar.gz

      - name: Create Release
        uses: softprops/action-gh-release@v1
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.run_number }}
          name: Release v${{ github.run_number }}
          body_path: release_body.txt
          draft: false
          prerelease: false

      - name: Log build result
        if: always()
        run: |
          if [ ${{ job.status }} == "success" ]; then
            echo "Build and release completed successfully"
          else
            echo "Build and release failed"
          fi
